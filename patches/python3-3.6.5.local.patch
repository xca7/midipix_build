diff -ru Python-3.6.3.orig/configure.ac Python-3.6.3/configure.ac
--- Python-3.6.3.orig/configure.ac	2017-10-03 07:52:02.000000000 +0200
+++ Python-3.6.3/configure.ac	2017-10-30 16:27:18.873969385 +0100
@@ -61,6 +61,15 @@
 
 if test "$cross_compiling" = yes; then
     AC_MSG_CHECKING([for python interpreter for cross build])
+    AC_MSG_CHECKING([python for build])
+    PYTHON_FOR_BUILD="${PYTHON_FOR_BUILD:-${PWD}/hostpython}"
+    AC_MSG_RESULT($PYTHON_FOR_BUILD)
+    AC_MSG_CHECKING([pgen for build])
+    PGEN_FOR_BUILD="${PGEN_FOR_BUILD:-Parser/hostpgen}"
+    AC_MSG_RESULT($PGEN_FOR_BUILD)
+    AC_MSG_CHECKING(_freeze_importlib for build)
+    _FIP_FOR_BUILD="${_FIP_FOR_BUILD:-Programs/host_freeze_importlib}"
+    AC_MSG_RESULT($_FIP_FOR_BUILD)
     if test -z "$PYTHON_FOR_BUILD"; then
         for interp in python$PACKAGE_VERSION python3 python; do
 	    which $interp >/dev/null 2>&1 || continue
@@ -78,9 +87,16 @@
 elif test "$cross_compiling" = maybe; then
     AC_MSG_ERROR([Cross compiling required --host=HOST-TUPLE and --build=ARCH])
 else
-    PYTHON_FOR_BUILD='./$(BUILDPYTHON) -E'
+    PYTHON_FOR_BUILD='$(BUILDPYTHON)'
+    PGEN_FOR_BUILD='$(PGEN)'
+    _FIP_FOR_BUILD='$(_FIP)'
 fi
 AC_SUBST(PYTHON_FOR_BUILD)
+AC_SUBST(PGEN_FOR_BUILD)
+AC_SUBST(_FIP_FOR_BUILD)
+AC_ARG_VAR(PYTHON_FOR_BUILD,[build system Python])
+AC_ARG_VAR(PGEN_FOR_BUILD,[build system Python pgen])
+AC_ARG_VAR(_FIP_FOR_BUILD,[build system Python _freeze_importlib])
 
 dnl Ensure that if prefix is specified, it does not end in a slash. If
 dnl it does, we get path names containing '//' which is both ugly and
@@ -379,6 +395,9 @@
 	*-*-cygwin*)
 		ac_sys_system=Cygwin
 		;;
+	*-*-midipix*)
+		ac_sys_system=Midipix
+		;;
 	*)
 		# for now, limit cross builds to known configurations
 		MACHDEP="unknown"
@@ -405,6 +424,7 @@
 	cygwin*) MACHDEP="cygwin";;
 	darwin*) MACHDEP="darwin";;
 	irix646) MACHDEP="irix6";;
+	midipix*) MACHDEP="midipix";;
 	'')	MACHDEP="unknown";;
     esac
 fi
@@ -412,6 +432,9 @@
 AC_SUBST(_PYTHON_HOST_PLATFORM)
 if test "$cross_compiling" = yes; then
 	case "$host" in
+	*-*-midipix*)
+		_host_cpu=
+		;;
 	*-*-linux*)
 		case "$host_cpu" in
 		arm*)
diff -ru Python-3.6.3.orig/Makefile.pre.in Python-3.6.3/Makefile.pre.in
--- Python-3.6.3.orig/Makefile.pre.in	2017-10-03 07:52:02.000000000 +0200
+++ Python-3.6.3/Makefile.pre.in	2017-10-30 16:36:51.547442438 +0100
@@ -279,6 +279,9 @@
 ##########################################################################
 # Parser
 PGEN=		Parser/pgen$(EXE)
+PGEN_FOR_BUILD=		@PGEN_FOR_BUILD@
+_FIP=		Programs/_freeze_importlib$(EXE)
+_FIP_FOR_BUILD=		@_FIP_FOR_BUILD@
 
 POBJS=		\
 		Parser/acceler.o \
@@ -575,6 +578,7 @@
 	esac; \
 	$(RUNSHARED) CC='$(CC)' LDSHARED='$(BLDSHARED)' OPT='$(OPT)' \
 		_TCLTK_INCLUDES='$(TCLTK_INCLUDES)' _TCLTK_LIBS='$(TCLTK_LIBS)' \
+		_PYTHON_HOST_PLATFORM='$(_PYTHON_HOST_PLATFORM)' \
 		$(PYTHON_FOR_BUILD) $(srcdir)/setup.py $$quiet build
 
 
@@ -687,20 +691,20 @@
 
 Programs/_freeze_importlib.o: Programs/_freeze_importlib.c Makefile
 
-Programs/_freeze_importlib: Programs/_freeze_importlib.o $(LIBRARY_OBJS_OMIT_FROZEN)
+$(_FIP): Programs/_freeze_importlib.o $(LIBRARY_OBJS_OMIT_FROZEN)
 	$(LINKCC) $(PY_LDFLAGS) -o $@ Programs/_freeze_importlib.o $(LIBRARY_OBJS_OMIT_FROZEN) $(LIBS) $(MODLIBS) $(SYSLIBS) $(LDLAST)
 
 .PHONY: regen-importlib
-regen-importlib: Programs/_freeze_importlib
+regen-importlib: $(_FIP_FOR_BUILD)
 	# Regenerate Python/importlib_external.h
 	# from Lib/importlib/_bootstrap_external.py using _freeze_importlib
-	./Programs/_freeze_importlib \
+	./$(_FIP_FOR_BUILD) \
 	    $(srcdir)/Lib/importlib/_bootstrap_external.py \
 	    $(srcdir)/Python/importlib_external.h.new
 	$(UPDATE_FILE) $(srcdir)/Python/importlib_external.h $(srcdir)/Python/importlib_external.h.new
 	# Regenerate Python/importlib.h from Lib/importlib/_bootstrap.py
 	# using _freeze_importlib
-	./Programs/_freeze_importlib \
+	./$(_FIP_FOR_BUILD) \
 	    $(srcdir)/Lib/importlib/_bootstrap.py \
 	    $(srcdir)/Python/importlib.h.new
 	$(UPDATE_FILE) $(srcdir)/Python/importlib.h $(srcdir)/Python/importlib.h.new
@@ -770,11 +774,11 @@
 		$(CC) $(OPT) $(PY_LDFLAGS) $(PGENOBJS) $(LIBS) -o $(PGEN)
 
 .PHONY: regen-grammar
-regen-grammar: $(PGEN)
+regen-grammar: $(PGEN_FOR_BUILD)
 	# Regenerate Include/graminit.h and Python/graminit.c
 	# from Grammar/Grammar using pgen
 	@$(MKDIR_P) Include
-	$(PGEN) $(srcdir)/Grammar/Grammar \
+	$(PGEN_FOR_BUILD) $(srcdir)/Grammar/Grammar \
 		$(srcdir)/Include/graminit.h.new \
 		$(srcdir)/Python/graminit.c.new
 	$(UPDATE_FILE) $(srcdir)/Include/graminit.h $(srcdir)/Include/graminit.h.new
@@ -1448,6 +1452,7 @@
 # Install the dynamically loadable modules
 # This goes into $(exec_prefix)
 sharedinstall: sharedmods
+	_PYTHON_HOST_PLATFORM='$(_PYTHON_HOST_PLATFORM)' \
 	$(RUNSHARED) $(PYTHON_FOR_BUILD) $(srcdir)/setup.py install \
 	   	--prefix=$(prefix) \
 		--install-scripts=$(BINDIR) \
diff -ru Python-3.6.3.orig/Modules/_curses_panel.c Python-3.6.3/Modules/_curses_panel.c
--- Python-3.6.3.orig/Modules/_curses_panel.c	2017-10-03 07:52:02.000000000 +0200
+++ Python-3.6.3/Modules/_curses_panel.c	2017-10-30 17:58:07.550223942 +0100
@@ -14,7 +14,11 @@
 
 #include "py_curses.h"
 
+#ifdef HAVE_NCURSESW
+#include <ncursesw/panel.h>
+#else
 #include <panel.h>
+#endif
 
 typedef struct {
     PyObject *PyCursesError;
diff -ru Python-3.6.3.orig/Modules/socketmodule.c Python-3.6.3/Modules/socketmodule.c
--- Python-3.6.3.orig/Modules/socketmodule.c	2017-10-03 07:52:02.000000000 +0200
+++ Python-3.6.3/Modules/socketmodule.c	2017-10-30 16:38:25.455027780 +0100
@@ -1366,7 +1366,7 @@
     }
 #endif
 
-#if defined(AF_CAN) && defined(SIOCGIFNAME)
+#if defined(HAVE_LINUX_CAN_H) && defined(AF_CAN)
     case AF_CAN:
     {
         struct sockaddr_can *a = (struct sockaddr_can *)addr;
@@ -2116,7 +2116,7 @@
     }
 #endif
 
-#ifdef AF_CAN
+#if defined(HAVE_LINUX_CAN_H) && defined(AF_CAN)
     case AF_CAN:
     {
         *len_ret = sizeof (struct sockaddr_can);
@@ -6736,7 +6736,7 @@
     PyModule_AddStringConstant(m, "BDADDR_LOCAL", "00:00:00:FF:FF:FF");
 #endif
 
-#ifdef AF_CAN
+#if defined(HAVE_LINUX_CAN_H) && defined(AF_CAN)
     /* Controller Area Network */
     PyModule_AddIntMacro(m, AF_CAN);
 #endif
diff -ru Python-3.6.3.orig/setup.py Python-3.6.3/setup.py
--- Python-3.6.3.orig/setup.py	2017-10-03 07:52:02.000000000 +0200
+++ Python-3.6.3/setup.py	2017-10-30 16:10:10.494480136 +0100
@@ -1353,8 +1353,13 @@
         panel_library = 'panel'
         if curses_library == 'ncursesw':
             curses_defines.append(('HAVE_NCURSESW', '1'))
-            if not cross_compiling:
-                curses_includes.append('/usr/include/ncursesw')
+            cflags = sysconfig.get_config_var('CFLAGS')
+            m = re.search(r'-isysroot\s+(\S+)', cflags)
+            if m is None:
+                sysroot = '/usr'
+            else:
+                sysroot = m.group(1)
+            curses_includes.append(sysroot + '/include/ncursesw')
             # Bug 1464056: If _curses.so links with ncursesw,
             # _curses_panel.so must link with panelw.
             panel_library = 'panelw'
